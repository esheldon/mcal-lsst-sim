#!/usr/bin/env python

import time
import argparse
import esutil as eu
from mdet_lsst_sim.run import run


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--ntrial', type=int, required=True,
                        help='number of sim pairs to run')
    parser.add_argument('--output', required=True, help='output file path')
    parser.add_argument('--config', required=True, help='simulation config')
    parser.add_argument('--seed', type=int, required=True, help='seed for rng')

    parser.add_argument('--use-sx', action='store_true',
                        help=('use sx based metadetect'))
    parser.add_argument('--deblend', action='store_true',
                        help=('use the lsst deblender'))

    parser.add_argument('--nostack', action='store_true',
                        help=('just do weighted sum coadd and run '
                              'metadetect'))

    parser.add_argument('--replace-bright', action='store_true',
                        help='replace regions marked bright with noise')
    parser.add_argument('--interp-bright', action='store_true',
                        help='interpolate regions marked bright')

    parser.add_argument('--full-output',
                        action='store_true',
                        help='write all output columns')

    parser.add_argument('--show', action='store_true')
    parser.add_argument('--show-sheared', action='store_true',
                        help='show sheared images')
    parser.add_argument('--show-masks', action='store_true',
                        help='just show image/masks in ds9')
    parser.add_argument('--show-sim', action='store_true',
                        help='show the sim image')

    parser.add_argument('--loglevel', default='info', help='logging level')
    return parser.parse_args()


def main():

    tm0 = time.time()

    args = get_args()

    sim_config = eu.io.read(args.config)

    run(
        sim_config=sim_config,
        seed=args.seed,
        ntrial=args.ntrial,
        output=args.output,
        full_output=args.full_output,
        show=args.show,
        show_sheared=args.show_sheared,
        show_masks=args.show_masks,
        show_sim=args.show_sim,
        use_sx=args.use_sx,
        deblend=args.deblend,
        nostack=args.nostack,
        interp_bright=args.interp_bright,
        replace_bright=args.replace_bright,
        loglevel=args.loglevel,
    )

    tm_seconds = time.time()-tm0
    tm_minutes = tm_seconds/60.0
    tm_per_trial = tm_seconds/args.ntrial
    print('time: %g minutes' % tm_minutes)
    print('time per trial: %g seconds' % tm_per_trial)


if __name__ == '__main__':
    main()
