#!/usr/bin/env python
import argparse
import fitsio
import esutil as eu
from pprint import pprint


def main(run, flist, nocancel, config_file):
    from mdet_lsst_sim.doshear import (
        jackknife, print_stats, get_mc_file, read_config,
    )

    config = read_config(config_file)

    print('run:', run)
    pprint(config)
    print('processing:', len(flist))

    nf = len(flist)
    data = {}

    for i, fname in enumerate(flist):
        print(f'{i+1}/{nf} {fname}')

        with fitsio.FITS(fname) as fits:
            for hdu in fits:
                if not hdu.has_data():
                    continue

                key = hdu.get_extname()
                ext_data = hdu.read()

                if key not in data:
                    data[key] = []

                data[key].append(ext_data)

    for key in data:
        print('jackknifing:', key)
        key_data = eu.numpy_util.combine_arrlist(data[key])

        st = jackknife(key_data, nocancel=nocancel)
        print_stats(st)

        fname = get_mc_file(
            run=run,
            key=key,
            nocancel=nocancel,
            weight_type=config.get('weight_type', None),
            require_primary=config['require_primary'],
        )

        print('writing:', fname)
        eu.ostools.makedirs_fromfile(fname)
        fitsio.write(fname, st, clobber=True)


def get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--run', required=True)
    parser.add_argument('--config', required=True)
    parser.add_argument('--flist', nargs='+', required=True)
    parser.add_argument('--nocancel', action='store_true')
    return parser.parse_args()


if __name__ == '__main__':
    args = get_args()
    main(
        run=args.run,
        config_file=args.config,
        flist=args.flist,
        nocancel=args.nocancel,
    )
